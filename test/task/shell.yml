doc: Built file to test tasks
default: task_$

properties:
  BUILD_DIR: '../../build/tst'

targets:

  task_$:
    doc: Test task $
    steps:
    - if: '_OS != "windows"'
      then:
      - mkdir: '={BUILD_DIR}/shell'
      # test shell
      - $:  'echo "TEST"'
        1=: 'result'
      - |
        if result != "TEST" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      # test command
      - $:  ['echo', 'TEST']
        1=: 'result'
      - |
        if result != "TEST" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      # test shell with property
      - 'message = "foo"'
      - $:  'echo "={message}"'
        1=: 'result'
      - |
        if result != "foo" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      # test command with property
      - 'message = "foo"'
      - $:  ['echo', '={message}']
        1=: 'result'
      - |
        if result != "foo" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      - for: 'i'
        in:  'range(3)'
        do:
        - $:  ['echo', '={i}']
          1=: 'result'
        - print: '={i}'
        - assert: 'result == toString(i)'
      # test file redirection
      - $:  'echo "TEST"'
        1>: '={BUILD_DIR}/shell/test.txt'
      - |
        if read(BUILD_DIR+"/shell/test.txt") != "TEST" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      # test stderr file redirection
      - $:  'echo "TEST2" >> /dev/stderr'
        2>: '={BUILD_DIR}/shell/test2.txt'
      - |
        if read(BUILD_DIR+"/shell/test2.txt") != "TEST2" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      # test append to a file
      - $:  'echo "TEST"'
        1>>: '={BUILD_DIR}/shell/test.txt'
      - |
        if read(BUILD_DIR+"/shell/test.txt") != "TEST\nTEST" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      # test append stderr to a file
      - $:  'echo "TEST2" >> /dev/stderr'
        2>>: '={BUILD_DIR}/shell/test2.txt'
      - |
        if read(BUILD_DIR+"/shell/test2.txt") != "TEST2\nTEST2" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      # test redirection stderr into property
      - $:  'echo "TEST" >> /dev/stderr'
        2=: 'result'
      - |
        if result != "TEST" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
      # test write on input
      - $:  'sed "s/hello/hi/"'
        <:  'hello there'
        1=: 'result'
      - |
        if result != "hi there" {
          throw("$ test failure")
        } else {
          println("$ test success")
        }
