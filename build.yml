doc:     'Build file to build neon'
default: [clean, bin, test, integ]
extends: c4s4/build/go-app.yml

properties:
  NAME:      'neon'
  BUILD_DIR: 'build'
  ARC_DIR:   '#{BUILD_DIR}/#{NAME}-#{VERSION}'
  REFERENCE: 'doc/reference.md'
  WIN_SHARE: '/home/casa/misc/shared'
  LIBRARIES:
  - 'gopkg.in/yaml.v2'
  - 'github.com/mattn/anko'
  - 'github.com/mattn/go-zglob'
  - 'github.com/fatih/color'
  - 'github.com/mitchellh/gox'

targets:

  integ:
    doc: 'Run integration tests'
    steps:
    - print: "Running integration tests"
    - for: 'file'
      in:  'find("test", "*.yml")'
      do:
      - print: 'Running build file "#{file}"'
      - $: 'bin/neon -file "test/#{file}"'

  version:
    doc: 'Generate version file'
    steps:
    - print: 'Generating version source file'
    - write: 'src/neon/version.go'
      text:  |
        package main

        var VERSION = "#{VERSION}"

  bin:
    doc: 'Build neon binary'
    depends: version
    steps:
    - print: "Building neon binary in 'bin/neon'"
    - delete: 'bin/neon'
    - $: 'go install #{NAME}'

  refs:
    doc: 'Generate reference documentation for tasks and builtins'
    depends: bin
    steps:
    - $: 'bin/neon -refs > #{REFERENCE}'
    # we add and commit reference if modified
    - try:
      - $: 'git diff --quiet --exit-code #{REFERENCE}'
      catch:
      - $: 'git add "#{REFERENCE}"'
      - $: 'git commit -m "Updated reference" "#{REFERENCE}"'

  archive:
    doc: 'Generate distribution archive'
    depends: version
    steps:
    - mkdir: '#{ARC_DIR}/bin/'
    - $: 'gox -output=#{ARC_DIR}/bin/{{.Dir}}-{{.OS}}-{{.Arch}} #{NAME}'
    - copy: 'LICENSE.txt'
      todir: '#{ARC_DIR}/'
    - $: 'md2pdf -o #{ARC_DIR}/README.pdf README.md'
    - $: 'changelog to markdown > #{BUILD_DIR}/CHANGELOG.md'
    - $: 'md2pdf -o #{ARC_DIR}/CHANGELOG.pdf #{BUILD_DIR}/CHANGELOG.md'
    - delete: '#{BUILD_DIR}/CHANGELOG.md'
    - mkdir: '#{ARC_DIR}/doc'
    - $: 'md2pdf -o #{ARC_DIR}/doc/quickstart.pdf doc/quickstart.md'
    - $: 'md2pdf -o #{ARC_DIR}/doc/usermanual.pdf doc/usermanual.md'
    - $: 'md2pdf -o #{ARC_DIR}/doc/reference.pdf doc/reference.md'
    - copy:  'bash/*'
      todir: '#{ARC_DIR}'
    - tar:    '#{NAME}-#{VERSION}/**/*'
      dir:    '#{BUILD_DIR}'
      tofile: '#{BUILD_DIR}/#{NAME}-#{VERSION}.tar.gz'

  release:
    depends: [clean, test, integ, refs, archive]
    steps:
    - super:

  win:
    doc: 'Test integration build file on Windows'
    steps:
    - copy:   'test.yml'
      tofile: '~/misc/shared/build.yml'
    - $: 'gox -output=#{WIN_SHARE}/#{NAME} -osarch=windows/386 #{NAME}'
