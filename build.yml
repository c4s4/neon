# Neon Build File (http://github.com/c4s4/neon)

doc:     Build file for NeON
default: [clean, fmt, check, test]
extends:
- c4s4/build/golang.yml
- c4s4/build/release.yml
- c4s4/build/github.yml

properties:
  NAME:      'neon'
  PACKAGE:   =NAME
  ARC_DIR:   '={BUILD_DIR}/={NAME}-={VERSION}'
  REFERENCE: 'doc/reference.md'
  ARC_FILES:
  - files: ['CHANGELOG.yml', 'LICENSE.txt', 'README.md', 'bash/*']
  - {files: 'bin/*', dir: =BUILD_DIR}
  - {files: 'doc/*.pdf', dir: =BUILD_DIR}
  LIBRARIES:
  - 'github.com/mitchellh/gox'
  - 'github.com/fzipp/gocyclo'
  - 'golang.org/x/lint/golint'
  - 'github.com/gordonklaus/ineffassign'
  - 'gopkg.in/yaml.v2'
  - 'github.com/c4s4/anko'
  - 'github.com/mattn/go-zglob'
  - 'github.com/fatih/color'
  CYCLOMAX: 25

environment:
  GOPATH: =_BASE
  PATH:   '={_BASE}/bin:${PATH}'

targets:

  bin:
    doc: Build neon binary
    steps:
    - print: "Building neon binary in 'bin/neon'"
    - delete: 'bin/neon'
    - $: ['go', 'install', '-ldflags', '-X neon/build.NeonVersion=={VERSION}', =NAME]

  refs:
    doc: Generate reference documentation
    depends: bin
    steps:
    - $: 'bin/neon -refs > ={REFERENCE}'
    - try:
      - $: ['git', 'diff', '--quiet', '--exit-code', =REFERENCE]
      catch:
      - $: ['git', 'add', =REFERENCE]
      - $: ['git', 'commit', '-m', 'Updated reference', =REFERENCE]

  doc:
    doc: Build documentations
    steps:
    - mkdir: '={BUILD_DIR}/doc'
    - $: ['md2pdf', '-o', '={BUILD_DIR}/doc/quickstart.pdf', 'doc/quickstart.md']
    - $: ['md2pdf', '-o', '={BUILD_DIR}/doc/usermanual.pdf', 'doc/usermanual.md']
    - $: ['md2pdf', '-o', '={BUILD_DIR}/doc/reference.pdf', 'doc/reference.md']

  binaries:
    doc: Generate binaries for all platforms
    steps:
    - mkdir: '={BUILD_DIR}/bin/'
    - $: ['gox', '-ldflags', '-X neon/build.NeonVersion=={VERSION}',
          '-output=={BUILD_DIR}/bin/{{.Dir}}-{{.OS}}-{{.Arch}}', =NAME]

  archive:
    doc: Generate distribution archive
    depends: [doc, binaries]
    steps:
    - super:

  release:
    depends: [clean, check, test, refs, archive]
    steps:
    - super:

  bugs:
    doc: Run bug build files
    depends: bin
    steps:
    - for: file
      in:  'find(joinpath("test", "bugs"), "*.yml")'
      do:
      - 'path = joinpath("test", "bugs", file)'
      - print: "Running build file '={path}'"
      - $: ['bin/neon', '-file', =path]
